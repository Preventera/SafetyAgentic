{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "SafetyAgentic: Backup Complet",
            "type": "shell",
            "command": "python",
            "args": [
                "backup_fixed.py"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "SafetyAgentic: Test Donn√©es CNESST",
            "type": "shell",
            "command": "python",
            "args": [
                "-c",
                "from pathlib import Path; files = list(Path('data').glob('lesions*.csv')); print(f'‚úÖ {len(files)} fichiers CNESST trouv√©s'); [print(f'  - {f.name} ({round(f.stat().st_size/1024/1024,1)} MB)') for f in files]"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always"
            }
        },
        {
            "label": "SafetyAgentic: Cr√©er Environnement Virtuel",
            "type": "shell",
            "command": "python",
            "args": [
                "-m",
                "venv",
                "venv"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always"
            }
        },
        {
            "label": "SafetyAgentic: Installer D√©pendances",
            "type": "shell",
            "command": "pip",
            "args": [
                "install",
                "-r",
                "requirements.txt"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always"
            }
        },
        {
            "label": "SafetyAgentic: Format Code",
            "type": "shell",
            "command": "black",
            "args": [
                "src/",
                "tests/"
            ],
            "group": "build"
        },
        {
            "label": "SafetyAgentic: Run Tests",
            "type": "shell",
            "command": "python",
            "args": [
                "-m",
                "pytest",
                "tests/",
                "-v"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always"
            }
        },
        {
            "label": "SafetyAgentic: V√©rifier Structure",
            "type": "shell",
            "command": "powershell",
            "args": [
                "-c",
                "Write-Host 'üìÅ STRUCTURE SAFETYAGENTIC:' -ForegroundColor Green; Get-ChildItem -Directory | ForEach-Object { Write-Host \"  ‚úÖ $($_.Name)\" -ForegroundColor Cyan }; Write-Host ''; Write-Host 'üìä DONN√âES CNESST:' -ForegroundColor Green; Get-ChildItem data\\*.csv | ForEach-Object { $size = [math]::Round($_.Length/1MB,1); Write-Host \"  üìÑ $($_.Name) - $size MB\" -ForegroundColor Yellow }"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always"
            }
        },
        {
            "label": "SafetyAgentic: Statistiques Projet",
            "type": "shell",
            "command": "python",
            "args": [
                "-c",
                "import os; from pathlib import Path; print('üìä STATISTIQUES SAFETYAGENTIC'); print('='*40); py_files = list(Path('.').rglob('*.py')); csv_files = list(Path('data').glob('*.csv')); total_csv_size = sum(f.stat().st_size for f in csv_files); print(f'üìÅ Fichiers Python: {len(py_files)}'); print(f'üìÑ Fichiers CNESST: {len(csv_files)}'); print(f'üíæ Taille donn√©es: {round(total_csv_size/1024/1024,1)} MB'); print(f'üèóÔ∏è Structure: {len(list(Path(\"src\").rglob(\"*\")))} √©l√©ments dans src/')"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always"
            }
        }
    ]
}